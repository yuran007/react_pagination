{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPage","totalItems","perPageItems","Math","ceil","className","href","onClick","map","page","items","App","useState","setPerPage","setCurrentPage","firstItem","lastItem","min","length","filteredItems","filter","_","index","id","name","value","onChange","e","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"mKAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,CACR,C,WCAYG,EAA6B,SAAC,GAKpC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAY,SAACC,EAAoBC,GAArB,OAChBC,KAAKC,KAAKH,EAAaC,EADP,EAmBlB,OACE,mCACE,qBAAIG,UAAU,aAAd,UACE,oBACEA,UAAS,oBACS,IAAhBP,EACI,WACA,IAJR,SAME,mBACE,UAAQ,WACRO,UAAU,YACVC,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QA9BU,WACE,IAAhBT,GAIJC,EAAaD,EAAc,EAC5B,EAmBO,oBAWDT,EAAW,EAAGW,EAAUJ,EAAOC,IAAUW,KAAI,SAACC,GAAD,OAE5C,aADA,CACA,MACEJ,UAAS,oBACPI,IAASX,EACL,SACA,IAENS,QAAS,kBAAMR,EAAaU,EAAnB,EANX,SAQE,mBACE,UAAQ,WACRJ,UAAU,YACVC,KAAI,WAAMG,GAHZ,SAKGA,KAREA,EAPqC,IAoB9C,oBACEJ,UAAS,oBACPP,IAAgBE,EAAUJ,EAAOC,GAC7B,WACA,IAJR,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVC,KAAK,QACL,gBAAeR,IAAgBE,EAAUJ,EAAOC,GAChDU,QA3DU,WACdT,IAAgBE,EAAUJ,EAAOC,IAIrCE,EAAaD,EAAc,EAC5B,EAgDO,wBAaT,ECvFKY,EAAQrB,EAAW,EAAG,IAAImB,KAAI,SAAAf,GAAC,qBAAYA,EAAZ,IAExBkB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOf,EAAP,KAAgBgB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOd,EAAP,KAAoBgB,EAApB,KACMC,GAAajB,EAAc,GAAKD,EAChCmB,EAAWb,KAAKc,IAAInB,EAAcD,EAASa,EAAMQ,QAEjDC,EAAgBT,EACnBU,QAAO,SAACC,EAAGC,GAAJ,OAAcA,GAASP,GAAaO,EAAQN,CAA5C,IAQV,OACE,sBAAKX,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiCiB,EAAY,EAD7C,cACoDC,EADpD,eACmEN,EAAMQ,OADzE,OAIA,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,KAAK,UACLC,MAAO5B,EACP6B,SArBY,SAACC,GACrBd,EAAWe,OAAOD,EAAEE,OAAOJ,QAC3BX,EAAe,EAChB,EAYO,UAQE,wBAAQW,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOc,EAAMQ,OACbrB,QAASA,EACTC,YAAaA,EACbC,aAxCkB,SAACU,GAAD,OAAkBK,EAAeL,EAAjC,IA0CpB,6BACGU,EAAcX,KAAI,SAAAuB,GAAI,OACrB,oBACE,UAAQ,OADV,SAIGA,GAFIA,EAHc,QAW9B,ECnEDC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.f918788f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { getNumbers } from '../../utils';\n\ninterface Prop {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void\n}\nexport const Pagination: React.FC<Prop> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPage = (totalItems: number, perPageItems: number) => (\n    Math.ceil(totalItems / perPageItems));\n\n  const prevHandler = () => {\n    if (currentPage === 1) {\n      return;\n    }\n\n    onPageChange(currentPage - 1);\n  };\n\n  const nextHandler = () => {\n    if (currentPage === totalPage(total, perPage)) {\n      return;\n    }\n\n    onPageChange(currentPage + 1);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={`page-item ${\n            currentPage === 1\n              ? 'disabled'\n              : ''}`}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={prevHandler}\n          >\n            «\n          </a>\n        </li>\n\n        {getNumbers(1, totalPage(total, perPage)).map((page: number) => (\n          // eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events\n          <li\n            className={`page-item ${\n              page === currentPage\n                ? 'active'\n                : ''}`}\n            key={page}\n            onClick={() => onPageChange(page)}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={`page-item ${\n            currentPage === totalPage(total, perPage)\n              ? 'disabled'\n              : ''}`}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === totalPage(total, perPage)}\n            onClick={nextHandler}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const firstItem = (currentPage - 1) * perPage;\n  const lastItem = Math.min(currentPage * perPage, items.length);\n\n  const filteredItems = items\n    .filter((_, index) => index >= firstItem && index < lastItem);\n\n  const saveCurrentPage = (page: number) => setCurrentPage(page);\n  const selectHandler = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(e.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            name=\"perPage\"\n            value={perPage}\n            onChange={selectHandler}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length} // total number of items to paginate\n        perPage={perPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={saveCurrentPage}\n      />\n      <ul>\n        {filteredItems.map(item => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}